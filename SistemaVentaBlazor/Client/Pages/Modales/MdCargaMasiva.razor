@inject IProductoService _productoServicio
@inject ISnackbar _snackBar

<MudDialog Style="width:400px">
    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll" Class="m-0 p-0">
            <MudText Typo="Typo.h6" Class="mb-3">Carga Masiva de Productos</MudText>

            <InputFile OnChange="CargarArchivoExcel" />
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Cancel">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SubirArchivo">Subir Archivo</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private IBrowserFile? archivoSeleccionado;

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void CargarArchivoExcel(InputFileChangeEventArgs e)
    {
        archivoSeleccionado = e.File;
        if (archivoSeleccionado == null)
        {
            _snackBar.Add("No se seleccionó ningún archivo", Severity.Warning);
        }
    }

    private async Task SubirArchivo()
    {
        if (archivoSeleccionado == null)
        {
            _snackBar.Add("Seleccione un archivo antes de subir", Severity.Warning);
            return;
        }

        try
        {
            using var stream = archivoSeleccionado.OpenReadStream();
            var resultado = await _productoServicio.SubirProductosDesdeExcel(archivoSeleccionado); // Ahora pasamos IBrowserFile directamente

            if (resultado.status)
            {
                _snackBar.Add("Archivo cargado correctamente", Severity.Success);
                MudDialog.Close(DialogResult.Ok(true)); // Cierra el modal y actualiza productos
            }
            else
            {
                string mensajeError = resultado?.msg ?? "Error desconocido al procesar el archivo";
                _snackBar.Add($"Error: {mensajeError}", Severity.Error);
            }

        }
        catch (Exception ex)
        {
            _snackBar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }

}
